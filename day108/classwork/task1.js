/*  ამ მისამართზე გააგზავნეთ მოთხოვნა  fetch 
ფუნქციის დახმარებით, ახსენით რას 
აკეთებს ეს ფუნქცია, შემდეგ დაბეჭდეთ 
პირდაპირ დაბრუნებული დაპირება კონსოლში, 
ახსენით რა არის დაპირება რეალური ცხვორების 
მაგალითიდ, როცა დაპირება დამყარდება გამოიყენეთ 
then და  catch ფუნქციები და ახსენით მათი დანიშნულება, აგრეთვე 
ახსენით რა არის  json და რატომ არის json მეთოდი ასინქრონიზირებული
*/



//fetch ფუნქციის საშუალებით 
//მოგვაქვს მოცემული მისამართიდან და ვაბრუნებთ ისევ promiseს
const promise =  fetch('https://jsonplaceholder.typicode.com/todos');

promise
    .then((response) => response.json())
    .then((result) => console.log(result))
    .catch((err) => console.log("Rejected"))

//then ფუნქციის საშუალებით ვმართავთ resolveს შემთხვევაში მის შედეგს
//catch ფუნქციის საშუალებით ვმართავთ reject შემთხვევეაში მის შედეგს


//json ნიშნავს javascript-object-notation არის ობიექტი,რომელიც გამოიყენება 
//სრუქტურირებული მონაცემთა გადაცემისთვის,json არის ასინქრონიზებული,რაც იმას ნიშნავს რომ
//JSON-თან ასინქრონული მუშაობა ეხება იმ პროცესს, როდესაც მონაცემების გადაცემა და მიღება ხდება პარალელურად და არა ცალ-ცალკე ნაბიჯებით.
